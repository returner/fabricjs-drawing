import { ShapeOption } from "../../interface/ShapeOption";
import { ShapeType } from "../ShapeType";
import { ShapePosition } from "../ShapePosition";
import { ShapeSize } from "../ShapeSize";
import { ShapeStroke } from "../ShapeStroke";

export class RectOptions implements ShapeOption, fabric.IRectOptions {
    shapeType: ShapeType;
    rx?: number | undefined;
    ry?: number | undefined;
    type?: string | undefined;
    originX?: string | undefined;
    originY?: string | undefined;
    top?: number | undefined;
    left?: number | undefined;
    width?: number | undefined;
    height?: number | undefined;
    scaleX?: number | undefined;
    scaleY?: number | undefined;
    flipX?: boolean | undefined;
    flipY?: boolean | undefined;
    opacity?: number | undefined;
    angle?: number | undefined;
    skewX?: number | undefined;
    skewY?: number | undefined;
    cornerSize?: number | undefined;
    transparentCorners?: boolean | undefined;
    hoverCursor?: string | undefined;
    moveCursor?: string | undefined;
    padding?: number | undefined;
    borderColor?: string | undefined;
    borderDashArray?: number[] | undefined;
    cornerColor?: string | undefined;
    cornerStrokeColor?: string | undefined;
    cornerStyle?: "rect" | "circle" | undefined;
    cornerDashArray?: number[] | undefined;
    centeredScaling?: boolean | undefined;
    centeredRotation?: boolean | undefined;
    fill?: string | import("fabric/fabric-impl").Pattern | undefined;
    fillRule?: string | undefined;
    globalCompositeOperation?: string | undefined;
    backgroundColor?: string | undefined;
    selectionBackgroundColor?: string | undefined;
    stroke?: string | undefined;
    strokeWidth?: number | undefined;
    strokeDashArray?: number[] | undefined;
    strokeDashOffset?: number | undefined;
    strokeLineCap?: string | undefined;
    strokeLineJoin?: string | undefined;
    strokeMiterLimit?: number | undefined;
    shadow?: string | import("fabric/fabric-impl").Shadow | undefined;
    borderOpacityWhenMoving?: number | undefined;
    borderScaleFactor?: number | undefined;
    transformMatrix?: any[] | undefined;
    minScaleLimit?: number | undefined;
    selectable?: boolean | undefined;
    evented?: boolean | undefined;
    visible?: boolean | undefined;
    hasControls?: boolean | undefined;
    hasBorders?: boolean | undefined;
    hasRotatingPoint?: boolean | undefined;
    rotatingPointOffset?: number | undefined;
    perPixelTargetFind?: boolean | undefined;
    includeDefaultValues?: boolean | undefined;
    clipTo?: Function | undefined;
    lockMovementX?: boolean | undefined;
    lockMovementY?: boolean | undefined;
    lockRotation?: boolean | undefined;
    lockScalingX?: boolean | undefined;
    lockScalingY?: boolean | undefined;
    lockUniScaling?: boolean | undefined;
    lockSkewingX?: boolean | undefined;
    lockSkewingY?: boolean | undefined;
    lockScalingFlip?: boolean | undefined;
    excludeFromExport?: boolean | undefined;
    objectCaching?: boolean | undefined;
    statefullCache?: boolean | undefined;
    noScaleCache?: boolean | undefined;
    strokeUniform?: boolean | undefined;
    dirty?: boolean | undefined;
    paintFirst?: string | undefined;
    stateProperties?: string[] | undefined;
    cacheProperties?: string[] | undefined;
    clipPath?: import("fabric/fabric-impl").Object | undefined;
    inverted?: boolean | undefined;
    absolutePositioned?: boolean | undefined;
    name?: string | undefined;
    data?: any;
    oCoords?: { tl: import("fabric/fabric-impl").Point; mt: import("fabric/fabric-impl").Point; tr: import("fabric/fabric-impl").Point; ml: import("fabric/fabric-impl").Point; mr: import("fabric/fabric-impl").Point; bl: import("fabric/fabric-impl").Point; mb: import("fabric/fabric-impl").Point; br: import("fabric/fabric-impl").Point; mtr: import("fabric/fabric-impl").Point; } | undefined;
    aCoords?: { bl: import("fabric/fabric-impl").Point; br: import("fabric/fabric-impl").Point; tl: import("fabric/fabric-impl").Point; tr: import("fabric/fabric-impl").Point; } | undefined;
    matrixCache?: any;
    ownMatrixCache?: any;
    snapAngle?: number | undefined;
    snapThreshold?: number | null | undefined;
    group?: import("fabric/fabric-impl").Group | undefined;
    canvas?: import("fabric/fabric-impl").Canvas | undefined;
    
    constructor() {
        this.shapeType = ShapeType.Rectangle;
        this.left = 0;
        this.top = 0;
        this.width = 1;
        this.height = 1;
        this.fill = "transparent";
        this.angle = 0;
        this.stroke = "black";
        this.strokeWidth = 1;
    }
}